# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions
name: Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  tests:
    name: ${{ matrix.session }} ${{ matrix.python }} / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { python: "3.10", os: "ubuntu-latest", session: "tests" }
          - { python: "3.9", os: "ubuntu-latest", session: "tests" }
          - { python: "3.8", os: "ubuntu-latest", session: "tests" }
          - { python: "3.7", os: "ubuntu-latest", session: "tests" }
          - { python: "3.10", os: "windows-latest", session: "tests" }
          - { python: "3.10", os: "macos-latest", session: "tests" }

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2.4.0

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2.3.1
        with:
          python-version: ${{ matrix.python }}

      - name: Upgrade pip
        run: |
          pip install --constraint=.github/workflows/constraints.txt pip
          pip --version

      - name: Upgrade pip in virtual environments
        shell: python
        run: |
          import os
          import pip
          with open(os.environ["GITHUB_ENV"], mode="a") as io:
              print(f"VIRTUALENV_PIP={pip.__version__}", file=io)

      - name: Install dependencies
        run: |
          python -m pip install -r requirements-dev.txt

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        run: |
          coverage run --parallel -m pytest

      - name: Upload coverage data
        if: always() && matrix.session == 'tests'
        uses: "actions/upload-artifact@v2.3.1"
        with:
          name: coverage-data
          path: ".coverage.*"

  coverage:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2.4.0

      - name: Set up Python
        uses: actions/setup-python@v2.3.1
        with:
          python-version: "3.10"

      - name: Upgrade pip
        run: |
          pip install --constraint=.github/workflows/constraints.txt pip
          pip --version

      - name: Upgrade pip in virtual environments
        shell: python
        run: |
          import os
          import pip
          with open(os.environ["GITHUB_ENV"], mode="a") as io:
              print(f"VIRTUALENV_PIP={pip.__version__}", file=io)

      - name: Install dependencies
        run: |
          python -m pip install -r requirements-dev.txt

      - name: Download coverage data
        uses: actions/download-artifact@v2.1.0
        with:
          name: coverage-data

      - name: Combine coverage data and display human readable report
        run: |
          coverage combine
          coverage report

      - name: Create coverage report
        run: |
          coverage xml

      - name: Upload coverage report
        uses: codecov/codecov-action@v2.1.0
